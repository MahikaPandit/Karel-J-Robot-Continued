import kareltherobot.*;
import java.awt.Color;

/**
 * plants garden 
 * @author Mahika Pandit
 * @version 6-15-23
 */

// This code is from Chapter 3 , it is one possible way to solve the problem, WITHOUT variables
// The purpose of this code is to either be an answer key if one would like to check their work or if someone would like to see how to go about the problem
// Have fun :)

public class Gardener3_7 extends Robot
{
    /**
     * Creates a Gardener3_7 object.
     *
     * @param street     specifies the vertical position on the grid
     *                   of this robot.
     * @param avenue     specifies the horizontal position on the grid
     *                   of this robot.
     * @param direction  specifies the direction of this robot.
     * @param beepers    specifies this robot's number of beepers.
     */
    public Gardener3_7 (int street, int avenue, 
           Direction direction, int beepers)
    {
        super(street, avenue, direction, beepers);
    }
    
    /* Gardener3_7 methods: */
    /**
     * Plants beepers in corner of cross
     * 
     * precondition: empty board, robot at bottom-left hand corner of board
     * postcondition: board has beepers in corners, robot at bottom right
     */
    public void plantBeepers()
    {
        plant1stBeeper();
        plant2ndBeeper();
        plant3rdBeeper();
        plant4thBeeper();
    }
    
    /**
     * plants first beeper in bottom-left corner
     * 
     * precondition: empty board, robot at bottom-left hand corner of board
     * postcondition: board has beeper in bottom-left corner, robot is ontop of upper-left hand corner
     */
    public void  plant1stBeeper()
    {
        turnLeft();
        move();
        move();
        move();
        turnLeft();
        move();
        move();
        move();
        putBeeper();
        turnLeft();
        move();
        move();
        move();
        turnRight();
        move();
        turnRight();
        move();
        move();
        move();
        turnLeft();
    }
    
    /**
     * plants second beeper in upper-left corner
     * 
     * precondition: beeper at bottom-left corner, robot at upper-left hand corner of board
     * postcondition: board has beeper in left corners, robot is ontop of upper-right hand corner
     */
    public void plant2ndBeeper()
    {
        putBeeper();
        move();
        move();
        move();
        turnRight();
        move();
        turnRight();
        move();
        move();
        move();
        turnLeft();
    }
    
    /**
     * plants third beeper in upper-right corner
     * 
     * precondition: beeper at left corners, robot at upper-right hand corner of board
     * postcondition: board has beeper in left corners + upper-right corner, 
     * robot is ontop of lower-right hand corner
     */
    public void plant3rdBeeper()
    {
        putBeeper();
        move();
        move();
        move();
        turnRight();
        move();
        turnRight();
        move();
        move();
        move();
        turnLeft();
    }

    /**
     * plants fourth beeper in lower-right corner
     * 
     * precondition: beeper at left corners + upper-right, robot at lower-right hand corner of board
     * postcondition: board has beepers in corners, robot at bottom right    
    */
    public void plant4thBeeper()
    {
        putBeeper();
        move();
        move();
        move();
    }
    
    /** 
     * turn robot 90 degrees to right
     * 
     * @precondition - none
     * @postcondition - robot is facing 90degrees to the right of original direction
     */
    public void turnRight()
    {
        turnLeft();
        turnLeft();
        turnLeft();
    }

}
